@model ShadowTracker.Models.Ticket
@using Microsoft.AspNetCore.Identity;
@using ShadowTracker.Services.Interfaces
@using ShadowTracker.Models.Enums
@inject IBTProjectService _projectService
@inject IBTTicketService _ticketService
@inject IBTFileService _fileService
@inject IBTTicketHistoryService _ticketHistoryService

@inject UserManager<BTUser> _userManager

@{
    ViewData["Title"] = "Details";
    BTUser btUser = await _userManager.GetUserAsync(User);
    int projectId = Model.Project.Id;
    BTUser projectManager = await _projectService.GetProjectManagerAsync(projectId);

}


@if (!string.IsNullOrEmpty(Model.DeveloperUserId))
{
    <a href="javascript:void(0);">
        @if (Model.DeveloperUser?.AvatarFileData != null)
        {
            <img class="media-object " src="data:image/*;base64,@(Convert.ToBase64String(btUser.AvatarFileData))" alt=""> }
        else
        {
            <img class="media-object " src="https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png" alt="" style="width:30px;height:30px">}
    </a>
    <span class="text-muted text-dark" style="font-size:x-small;">
        Developer:  <strong>@Model.DeveloperUser.FullName</strong>
    </span>}

<div>
    <div classxfont-weighteighteightgetainer-fluid">
        <div class="row gy-2">
            <div class="col-md-12 col">
                <div class="row col-cols-2 mt-5 ">
                    <div class="card col m-1 p-2 text-dark">
                        <div class="card-body">
                            @*Title of Ticket*@
                            <h3>@Model.Title</h3>
                            @*Description of Ticket*@
                            <p>@Model.Description</p>
                            <div class="progress-container progress-info m-b-25">
                                @*Project Name and information*@
                                <span class="progress-badge" style="font-size:small">Project: @Model.Project.Name</span>
                                <div class="progress">
                                    @*Progress bar logic*@
                                    @{
                                        var start = Model.Project.StartDate.Value;
                                        var end = Model.Project.EndDate.Value;
                                        var today = DateTime.Now;
                                        var percent = today >= end ? 100 : today < start ? 0 : Math.Round((today.Subtract(start)) / (end.Subtract(start)) * 100);
                                    }
                                    @*Variable from razor logic*@
                                    <div class="progress-bar" role="progressbar" aria-valuemin="0" aria-valuemax="100" style="width:@percent;">
                                        @*Variable from razor logic*@
                                        <span class="progress-value">@percent%</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card col m-1 p-2">
                        <div class="card-body text-dark">
                            <ul class="list-unstyled">
                                @*Ticket date*@
                                @if (Model.DeveloperUser != null)
                                {
                                    <li><strong>Developer:</strong> <span class=""> @Model.DeveloperUser?.FullName</span></li>
                                }
                                else
                                {
                                    if (User.IsInRole("Admin"))
                                    {
                                        <li>Devloper:<a class=" btn btn-warning btn-sm" asp-action="AssignDeveloper" asp-controller="Tickets" asp-route-ticketId="@Model.Id">Assign Developer</a></li>
                                    }
                                    else
                                    {
                                        <li>Developer: Not Assigned.</li>
                                    }

                                }
                                <li><strong>Date Entered:</strong> <span class=""> @Model.Created.ToString("dd/MM/yy")</span></li>
                                @*Project end date*@
                                @if (Model.DueDate is not null)
                                {
                                    <li><strong>Deadline:</strong> <span class="">@Model.DueDate.Value.ToString("dd/MM/yy") </span></li>
                                }
                                else
                                {
                                    <li><strong>Deadline:</strong> <span class=""> No Due Date Set</span></li>
                                }
                                @*Ticket type*@
                                <li><strong>Type:</strong> <span class=""> @Model.TicketType.Name</span></li>
                                @*Ticket priority*@
                                <li><strong>Priority:</strong> <span class="">  @Model.TicketPriority.Name</span></li>
                                @*Ticket status*@
                                <li><strong>Status:</strong> <span class=""> @Model.TicketStatus.Name</span></li>
                            </ul>
                            @if (Model.Archived == false && User.IsInRole("Admin"))
                            {
                                <a class="btn btn-danger btn-sm mt-1" asp-action="Archive" asp-controller="Tickets" asp-route-id="@Model.Id">Archive</a>
                                <a class="btn btn-warning btn-sm mt-1" asp-action="Edit" asp-controller="Tickets" asp-route-id="@Model.Id">Edit</a>
                            }
                            else
                            {
                                <a class="btn btn-warning btn-sm mt-1" asp-action="Edit" asp-controller="Tickets" asp-route-id="@Model.Id">Edit</a>

                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-8 col col-cols-2 mt-5 ">
                <div class="col">
                    <div class="text-dark">
                        <div class="card m-1 p-2">
                            <div class="card-header">
                                <h2>Comments</h2>
                            </div>
                            <div class="card-body" style="overflow-y:auto;height:600px;">
                                @*Form and Logic for authorized users to add comments*@
                                <form class="form-horizontal form-bordered" asp-action="AddTicketComment" asp-controller="Tickets" method="post">
                                    <input type="hidden" asp-for="Id" name="TicketId" />
                                    @if (Model.DeveloperUserId == btUser.Id || Model.OwnerUserId == btUser.Id || projectManager?.Id == btUser.Id || User.IsInRole(nameof(BTRoles.Admin)))
                                    {
                                        <div class="form-group">
                                            <textarea id="editor" asp-for="@(new TicketComment().Comment)" rows="8" class="form-control" required placeholder="Add comment ..."></textarea>
                                        </div>
                                        <button class="btn btn-sm btn-primary">Submit</button> }
                                    else
                                    {
                                        <div class="form-group">
                                            <textarea disabled asp-for="@(new TicketComment().Comment)" rows="8" class="form-control" required placeholder="Add comment ..."></textarea>
                                        </div>}
                                </form>
                                <hr />
                                <h6>Comments</h6>
                                <ul class="right_chat list-unstyled mb-0">
                                    @*Loop to show comments made for the Ticket*@
                                    @if (Model.Comments.Count == 0)
                                    {
                                        <li>
                                            <p>No Comments Yet.</p>
                                        </li>
                                    }
                                    else
                                    {


                                        @foreach (TicketComment comment in Model.Comments)
                                        {
                                            <li class=" mb-4">
                                                <div class="">
                                                    <a href="javascript:void(0);">
                                                        @if (btUser?.AvatarFileData != null)
                                                        {
                                                            <img class="media-object " src="data:image/*;base64,@(Convert.ToBase64String(btUser.AvatarFileData))" alt=""> }
                                                        else
                                                        {
                                                            <img class="media-object " src="https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png" alt="" style="width:30px;height:30px">}
                                                    </a>
                                                    <div class="">
                                                        <span class="text-muted" style="font-size:x-small;">
                                                            @comment.User.FullName
                                                            <small class="float-right">@comment.Created.ToString("MM.dd.yyyy h:ss tt")</small>:
                                                        </span>
                                                    </div>
                                                    <span class=" text-primary">@Html.Raw(comment.Comment)</span>
                                                </div>
                                            </li>
                                        }
                                    }
                                </ul>
                            </div>
                            <div class="card-footer">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col">
                    <div class="">
                        <div class="card m-1 p-2 text-dark">
                            <div class="card-header">
                                <h2>Attachments</h2>
                            </div>
                            <div class="card-body" style="overflow-y:auto;height:300px;">

                                @* Refer to the Ticket Attachments document for this section *@

                                @* Ticket attachments part 1 here *@
                                <div class="row clearfix">
                                    <div>
                                        <form asp-action="AddTicketAttachment" asp-controller="Tickets" enctype="multipart/form-data" method="post">
                                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                            <input type="hidden" asp-for="Id" name="TicketId">

                                            <div class="media-body ml-3">
                                                <label>
                                                    Description
                                                    <input asp-for="@(new TicketAttachment().Description)" type="text" class="form-control" />
                                                </label><br />
                                                <label class="btn btn-outline-primary btn-sm">
                                                    <input asp-for="@( new TicketAttachment().FormFile)" type="file" class="form-control-file" />
                                                </label>
                                                <input type="submit" class="btn btn-outline-secondary btn-sm md-btn-flat" value="Submit" />
                                            </div>
                                        </form>
                                    </div>
                                </div>

                                @* Ticket attachments part 2 here *@
                                <hr />
                                <h6>Attachments</h6>
                                <div class="container">
                                    <div class="row">
                                        @if (Model.Attachments.Count == 0)
                                        {
                                            <p>No Attatchments Yet.</p>
                                        }
                                        else
                                        {
                                            @foreach (TicketAttachment item in Model.Attachments)
                                            {
                                                <div class="col col-sm-2">
                                                    <a asp-action="ShowFile" asp-controller="Tickets" asp-route-Id="@item.Id">
                                                        <div class="icon">
                                                            <img src="@_fileService.GetFileIcon(item.FileName)" style="height:50px;width:50px" data-bs-toggle="tooltip" data-bs-placement="top" title="" data-bs-original-title="@item.FileName" />
                                                        </div>
                                                    </a>
                                                    <div style="font-size:x-small">
                                                        <div class="file-name">
                                                            <strong>@item.Description</strong>
                                                        </div>
                                                        <small>Size: @_fileService.FormatFileSize(item.FileData.Length) </small>
                                                    </div>
                                                </div>
                                            }
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="card-footer">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4 col mt-5 ">
                <div class="">
                    <div class="card m-1 p-2 text-dark">
                        <div class="card-header">
                            <h2>History</h2>
                            <hr />
                        </div>
                        <div class="card-body" style="overflow-y:auto;height:1000px;">
                            @*Loop to show the history entries for the Ticket*@
                            <div class="card-body" style="overflow-y:auto;height:1000px;">
                                @if (Model.History.Count == 0)
                                {
                                    <h6>This Ticket Has No Activity.</h6>
                                }
                                else
                                {
                                    @foreach (TicketHistory history in Model.History)
                                    {
                                        <div class="">
                                            <span class="date" style="font-weight:bold">@history.Created.ToString("dd MMM yyyy")</span>
                                            <h6>@history.Description</h6>
                                            <span>By: <a href="" title="@history.User.FullName">@history.User.FullName</a></span>
                                            <div class="">
                                                @if (history.Description.Contains("New Ticket Created"))
                                                {
                                                    <p>A ticket was added.</p> }
                                                else if (history.Property.Equals("TicketComment") || history.Property.Equals("TicketAttachment"))
                                                {
                                                    <p>A <b>@history.Property</b>  was added.</p> }
                                                else
                                                {
                                                    <p>The ticket <b>@history.Property</b>  was edited</p>
                                                    <p>@($"Previous {history.Property}:  ") <span style="color:red">@history.OldValue</span></p>
                                                    <p>@($"Current {history.Property}:  ") <span style="color:green">@history.NewValue</span></p>}
                                            </div>
                                        </div>
                                        <hr />}
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>