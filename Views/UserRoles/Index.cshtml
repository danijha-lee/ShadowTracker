@using ShadowTracker.Services.Interfaces
@using Microsoft.AspNetCore.Identity;
@using ShadowTracker.Extensions;
@inject IBTProjectService _projectService
@inject IImageService _imageService
@inject IBTTicketHistoryService _ticketHistoryService
@inject UserManager<BTUser> _userManager
@inject IBTTicketService _ticketService
@inject IBTCompanyInfoService _companyService
@inject IBTRolesService _rolesService

@{
    ViewData["Title"] = "Index";
    int companyId = User.Identity.GetCompanyId().Value;

    BTUser user = await _userManager.GetUserAsync(User);
    Company company = await _companyService.GetCompanyInfoByIdAsync(companyId);
}

<div class="col-sm-12">
    <div class="card">
        <div class="card-header pb-0">
            <h5>@company.Name </h5>
        </div>
        <div class="card-body">
            <table class="table table-hover">
                <thead class="">
                    <tr>
                        @* Table header *@
                        <td>Member</td>
                        <th>Name</th>
                        <th>Role</th>
                        <th>Email</th>
                        <th>Projects</th>
                        <th>Tickets</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (BTUser member in company.Members)
                    {
                        int count = (await _ticketService.GetTicketsByUserIdAsync(member.Id, companyId)).Count;
                        <tr>
                            @if (member.AvatarFileData != null)
                            {
                                <td>
                                    <img class="img-fluid rounded-circle me-3" src="data:image/*;base64,@(Convert.ToBase64String(member.AvatarFileData))" width="64" height="64" alt="...">
                                </td>
                            }
                            else
                            {
                                <td>
                                    <img class="img-fluid rounded-circle me-3" src="/assets/images/dashboard/1.png" alt="...">
                                </td>

                            }
                            <td>@member.FullName</td>

                            <td>@((await _rolesService.GetUserRolesAsync(member)).FirstOrDefault())</td>
                            <td>@member.Email</td>
                            <td>@member.Projects?.Count</td>
                            <td>@count</td>
                            <td>
                                @if (User.IsInRole("Admin"))
                                {
                                <td><a class=" btn btn-warning btn-sm" asp-action="ManageUserRoles" asp-controller="UserRoles" asp-route-userId="@member.Id">Manage Role</a></td>
                                <td> <a class="btn btn-secondary" asp-action="Create" asp-controller="Notifications">Message</a></td>
                            }
                            else
                            {
                                <td> <a class="btn btn-secondary" asp-action="Create" asp-controller="Notifications">Message</a></td>
                            }
                            </tr>
                        }
                </tbody>
            </table>
        </div>
    </div>
</div>